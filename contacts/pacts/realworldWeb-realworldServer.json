{
  "consumer": {
    "name": "realworldWeb"
  },
  "interactions": [
    {
      "description": "a request to register",
      "providerStates": [
        {
          "name": "both email and username already exist when registering"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "jake@jake.taken",
            "password": "fakefake",
            "username": "jake_exist"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users"
      },
      "response": {
        "body": {
          "errors": {
            "email": [
              "has already been taken"
            ],
            "username": [
              "has already been taken"
            ]
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 422
      }
    },
    {
      "description": "a request to register",
      "providerStates": [
        {
          "name": "email already exist when registering"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "jake@jake.taken",
            "password": "fakefake",
            "username": "jake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users"
      },
      "response": {
        "body": {
          "errors": {
            "email": [
              "has already been taken"
            ]
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 422
      }
    },
    {
      "description": "a request to get user",
      "providerStates": [
        {
          "name": "user exist and get user info"
        }
      ],
      "request": {
        "headers": {
          "Authorization": "Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTc0NTkyMzQsImV4cCI6NDEwNTAwODAwMCwic3ViIjoiamFrZV9pZCIsInVzZXJuYW1lIjoiamFrZSIsImVtYWlsIjoiamFrZUBqYWtlLmpha2UifQ.ZDKKQ0noCRU3cHs9B2EW1GllM6lj5Wr07GBoJVf2v3g"
        },
        "method": "GET",
        "path": "/user"
      },
      "response": {
        "body": {
          "user": {
            "bio": "I work at statefarm",
            "email": "jake@jake.jake",
            "image": "http://image.url",
            "token": "jwt.token.here",
            "username": "jake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 200
      }
    },
    {
      "description": "a request to login",
      "providerStates": [
        {
          "name": "user exists"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "jake@jake.jake",
            "password": "jakejake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users/login"
      },
      "response": {
        "body": {
          "user": {
            "bio": "I work at statefarm",
            "email": "jake@jake.jake",
            "image": "http://image.url",
            "token": "jwt.token.here",
            "username": "jake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 201
      }
    },
    {
      "description": "a request to update user info",
      "providerStates": [
        {
          "name": "user exists and update user info"
        }
      ],
      "request": {
        "body": {
          "user": {
            "bio": "I work at statefarm",
            "email": "jake-john@jake.jake",
            "image": "http://image.url",
            "password": "jakejakejake",
            "username": "jake John"
          }
        },
        "headers": {
          "Authorization": "Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTc0NTkyMzQsImV4cCI6NDEwNTAwODAwMCwic3ViIjoiamFrZV9pZCIsInVzZXJuYW1lIjoiamFrZSIsImVtYWlsIjoiamFrZUBqYWtlLmpha2UifQ.ZDKKQ0noCRU3cHs9B2EW1GllM6lj5Wr07GBoJVf2v3g",
          "Content-Type": "application/json"
        },
        "method": "PUT",
        "path": "/user"
      },
      "response": {
        "body": {
          "user": {
            "bio": "I work at statefarm",
            "email": "jake-john@jake.jake",
            "image": "http://image.url",
            "token": "jwt.token.here",
            "username": "jake John"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 200
      }
    },
    {
      "description": "a request to create article",
      "providerStates": [
        {
          "name": "user logged in what to post new article"
        }
      ],
      "request": {
        "body": {
          "article": {
            "body": "You have to believe",
            "description": "Ever wonder how?",
            "tagList": [
              "reactjs",
              "angularjs",
              "dragons"
            ],
            "title": "How to train your dragon"
          }
        },
        "headers": {
          "Authorization": "Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTc0NTkyMzQsImV4cCI6NDEwNTAwODAwMCwic3ViIjoiamFrZV9pZCIsInVzZXJuYW1lIjoiamFrZSIsImVtYWlsIjoiamFrZUBqYWtlLmpha2UifQ.ZDKKQ0noCRU3cHs9B2EW1GllM6lj5Wr07GBoJVf2v3g",
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/articles"
      },
      "response": {
        "body": {
          "article": {
            "author": {
              "bio": "I work at statefarm",
              "following": false,
              "image": "http://image.url",
              "username": "jake"
            },
            "body": "You have to believe",
            "createdAt": "2016-02-18T03:22:56.637Z",
            "description": "Ever wonder how?",
            "favorited": false,
            "favoritesCount": 0,
            "slug": "how-to-train-your-dragon",
            "tagList": [
              "reactjs",
              "angularjs",
              "dragons"
            ],
            "title": "How to train your dragon",
            "updatedAt": "2016-02-18T03:48:35.824Z"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 201
      }
    },
    {
      "description": "a request to login",
      "providerStates": [
        {
          "name": "user not or password invalid"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "fake@jake.jake",
            "password": "fakefake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users/login"
      },
      "response": {
        "body": {
          "errors": {
            "email or password": [
              "is invalid"
            ]
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 403
      }
    },
    {
      "description": "a request to register",
      "providerStates": [
        {
          "name": "user not registered"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "jake@jake.jake",
            "password": "jakejake",
            "username": "jake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users"
      },
      "response": {
        "body": {
          "user": {
            "email": "jake@jake.jake",
            "token": "jwt.token.here",
            "username": "jake"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 201
      }
    },
    {
      "description": "a request to register",
      "providerStates": [
        {
          "name": "username already exist when registering"
        }
      ],
      "request": {
        "body": {
          "user": {
            "email": "jake@jake.jake",
            "password": "fakefake",
            "username": "jake_exist"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "method": "POST",
        "path": "/users"
      },
      "response": {
        "body": {
          "errors": {
            "username": [
              "has already been taken"
            ]
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "status": 422
      }
    }
  ],
  "metadata": {
    "pact-js": {
      "version": "12.1.0"
    },
    "pactRust": {
      "ffi": "0.4.9",
      "models": "1.1.11"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "realworldServer"
  }
}